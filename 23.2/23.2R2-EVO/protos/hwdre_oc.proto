syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional components_re jnpr_components_re_ext = 97;
}

message components_re {
   message component_list {
      optional string name = 51 [(telemetry_options).is_key = true];
      optional state_type state = 151;
      message state_type {
         optional string name = 51;
         optional string type = 52;
         optional string id = 53;
         optional string location = 59;
         optional string description = 54;
         optional string mfg_name = 60;
         optional string mfg_date = 61;
         optional string hardware_version = 57;
         optional string firmware_version = 62;
         optional string software_version = 63;
         optional string serial_no = 55;
         optional string part_no = 56;
         optional bool removable = 64;
         optional string oper_status = 58;
         optional bool empty = 65;
         optional string parent = 66;
         optional string redundant_role = 73;
         optional last_switchover_reason_type last_switchover_reason = 153;
         message last_switchover_reason_type {
            optional string trigger = 51;
            optional string details = 52;
         }
         optional uint64 last_switchover_time = 74;
         optional string last_reboot_reason = 75;
         optional uint64 last_reboot_time = 76;
         optional bool switchover_ready = 77;
         optional temperature_type temperature = 151;
         message temperature_type {
            optional double instant = 51;
         }
         optional memory_type memory = 152;
         message memory_type {
            optional uint64 available = 51;
            optional uint64 utilized = 52;
         }
         optional uint32 allocated_power = 67;
         optional uint32 used_power = 68;
      }
      optional properties_type properties = 152;
      message properties_type {
         message property_list {
            optional string name = 51 [(telemetry_options).is_key = true];
            optional state_type state = 151;
            message state_type {
               optional string value = 51;
               optional bool configurable = 52;
            }
         }
         repeated property_list property = 151;
      }
      optional subcomponents_type subcomponents = 154;
      message subcomponents_type {
         message subcomponent_list {
            optional string name = 51 [(telemetry_options).is_key = true];
            optional state_type state = 151;
            message state_type {
               optional string name = 51;
            }
         }
         repeated subcomponent_list subcomponent = 151;
      }
      optional power_supply_type power_supply = 155;
      message power_supply_type {
         optional state_type state = 151;
         message state_type {
            optional string capacity = 51;
            optional string input_current = 52;
            optional string input_voltage = 53;
            optional string output_current = 54;
            optional string output_voltage = 55;
            optional string output_power = 56;
         }
      }
      optional fan_type fan = 153;
      message fan_type {
         optional state_type state = 151;
         message state_type {
            optional uint32 speed = 51;
         }
      }
      optional fabric_type fabric = 166;
      message fabric_type {
         optional state_type state = 166;
         message state_type {
            optional string power_admin_state = 58;
         }
      }
      optional storage_type storage = 167;
      message storage_type {
      }
      optional backplane_type backplane = 165;
      message backplane_type {
      }
      optional controller_card_type controller_card = 168;
      message controller_card_type {
         optional state_type state = 168;
         message state_type {
            optional string power_admin_state = 58;
         }
      }
      optional linecard_type linecard = 161;
      message linecard_type {
         optional state_type state = 151;
         message state_type {
            optional string power_admin_state = 152;
            optional string slot_id = 153;
         }
      }
   }
   repeated component_list component = 151;
}
