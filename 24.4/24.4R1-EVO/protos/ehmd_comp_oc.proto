/* 
This proto is generated from below openconfig models
openconfig-platform - This module defines a data model for representing a system
component inventory, which can include hardware or software
elements arranged in an arbitrary structure
openconfig-platform-cpu - This module defines data related to FAN components in the
OpenConfig platform model
*/
syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional components_telemetry jnpr_components_telemetry_ext = 147;
}

message components_telemetry {    // /components
   message component_list {    // /components/component
      optional string name = 32 [(telemetry_options).is_key = true];    // /components/component/name
      optional state_type state = 81;    // /components/component/state
      message state_type {
         optional string name = 86;    // /components/component/state/name
         optional string type = 84;    // /components/component/state/type
         optional string description = 82;    // /components/component/state/description
         optional string mfg_name = 83;    // /components/component/state/mfg-name
         optional string parent = 85;    // /components/component/state/parent
      }
      optional cpu_type cpu = 73;    // /components/component/cpu
      message cpu_type {
         optional utilization_type utilization = 64;    // /components/component/cpu/utilization
         message utilization_type {
            optional state_type state = 65;    // /components/component/cpu/utilization/state
            message state_type {
               optional uint32 instant = 66;    // /components/component/cpu/utilization/state/instant
               optional uint32 avg = 67;    // /components/component/cpu/utilization/state/avg
               optional uint32 min = 68;    // /components/component/cpu/utilization/state/min
               optional uint32 max = 69;    // /components/component/cpu/utilization/state/max
               optional uint64 interval = 70;    // /components/component/cpu/utilization/state/interval
               optional uint64 min_time = 71;    // /components/component/cpu/utilization/state/min-time
               optional uint64 max_time = 72;    // /components/component/cpu/utilization/state/max-time
            }
         }
      }
   }
   repeated component_list component = 63;
}
