/* 
This proto is generated from below openconfig models
openconfig-yang-types - This module contains a set of extension types to the
YANG builtin types that are used across multiple
OpenConfig models
openconfig-inet-types - This module contains a set of Internet address related
types for use in OpenConfig modules
*/
syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional components_pipeline_counters_drop_281 jnpr_components_pipeline_counters_drop_281_ext = 281;
}

message components_pipeline_counters_drop_281 {    // /components
   message component_list {    // /components/component
      optional string name = 201 [(telemetry_options).is_key = true];    // /components/component/name
      optional integrated_circuit_type integrated_circuit = 200;    // /components/component/integrated-circuit
      message integrated_circuit_type {
         optional pipeline_counters_type pipeline_counters = 200;    // /components/component/integrated-circuit/pipeline-counters
         message pipeline_counters_type {
            optional drop_type drop = 200;    // /components/component/integrated-circuit/pipeline-counters/drop
            message drop_type {
               optional state_type state = 199;    // /components/component/integrated-circuit/pipeline-counters/drop/state
               message state_type {
                  optional uint64 adverse_aggregate = 202;    // /components/component/integrated-circuit/pipeline-counters/drop/state/adverse-aggregate
                  optional uint64 packet_processing_aggregate = 203;    // /components/component/integrated-circuit/pipeline-counters/drop/state/packet-processing-aggregate
                  optional uint64 urpf_aggregate = 204;    // /components/component/integrated-circuit/pipeline-counters/drop/state/urpf-aggregate
               }
               optional lookup_block_type lookup_block = 200;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block
               message lookup_block_type {
                  optional state_type state = 200;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state
                  message state_type {
                     optional uint64 no_route = 202;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/no-route
                     optional uint64 no_nexthop = 203;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/no-nexthop
                     optional uint64 invalid_packet = 204;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/invalid-packet
                     optional uint64 incorrect_software_state = 205;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/incorrect-software-state
                     optional uint64 fragment_total_drops = 206;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/fragment-total-drops
                     optional uint64 lookup_aggregate = 207;    // /components/component/integrated-circuit/pipeline-counters/drop/lookup-block/state/lookup-aggregate
                  }
               }
               optional host_interface_block_type host_interface_block = 201;    // /components/component/integrated-circuit/pipeline-counters/drop/host-interface-block
               message host_interface_block_type {
                  optional state_type state = 200;    // /components/component/integrated-circuit/pipeline-counters/drop/host-interface-block/state
                  message state_type {
                     optional uint64 host_aggregate = 202;    // /components/component/integrated-circuit/pipeline-counters/drop/host-interface-block/state/host-aggregate
                  }
               }
            }
         }
      }
   }
   repeated component_list component = 200;
}
