/* 
This proto is generated from below openconfig models
openconfig-interfaces - Model for managing network interfaces and subinterfaces
openconfig-if-ip - This model defines data for managing configuration and
operational state on IP (IPv4 and IPv6) interfaces
jnx-aug-openconfig-if-ip
openconfig-if-tunnel - This model adds extensions to the OpenConfig interfaces
model to configure tunnel interfaces on a network
device
openconfig-if-ethernet - Model for managing Ethernet interfaces -- augments the OpenConfig
model for interface configuration and state
openconfig-if-ethernet-ext - This module adds extensions to the base ethernet configuration
and operational state model to support additional use cases
openconfig-platform-transceiver - This module defines configuration and operational state data
for transceivers (i
openconfig-platform - This module defines a data model for representing a system
component inventory, which can include hardware or software
elements arranged in an arbitrary structure
*/
syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional interfaces_mib jnpr_interfaces_mib_ext = 55;
}

message interfaces_mib {    // /interfaces
   message interface_list {    // /interfaces/interface
      optional string name = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/name
      optional state_type state = 151;    // /interfaces/interface/state
      message state_type {
         optional string name = 51;    // /interfaces/interface/state/name
         optional string type = 52;    // /interfaces/interface/state/type
         optional uint32 mtu = 53;    // /interfaces/interface/state/mtu
         optional string loopback_mode = 56;    // /interfaces/interface/state/loopback-mode
         optional string description = 54;    // /interfaces/interface/state/description
         optional bool enabled = 55;    // /interfaces/interface/state/enabled
         optional uint32 ifindex = 61;    // /interfaces/interface/state/ifindex
         optional string admin_status = 62;    // /interfaces/interface/state/admin-status
         optional string oper_status = 63;    // /interfaces/interface/state/oper-status
         optional uint64 last_change = 64;    // /interfaces/interface/state/last-change
         optional bool logical = 65;    // /interfaces/interface/state/logical
         optional string hardware_port = 66;    // /interfaces/interface/state/hardware-port
         optional string transceiver = 67;    // /interfaces/interface/state/transceiver
         repeated uint32 physical_channel = 68;    // /interfaces/interface/state/physical-channel
         optional counters_type counters = 151;    // /interfaces/interface/state/counters
         message counters_type {
            optional uint64 carrier_transitions = 51;    // /interfaces/interface/state/counters/carrier-transitions
         }
      }
      optional subinterfaces_type subinterfaces = 152;    // /interfaces/interface/subinterfaces
      message subinterfaces_type {
         message subinterface_list {    // /interfaces/interface/subinterfaces/subinterface
            optional uint32 index = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/subinterfaces/subinterface/index
            optional string name = 52;    // /interfaces/interface/subinterfaces/subinterface/name
            optional uint32 snmp_index = 55;    // /interfaces/interface/subinterfaces/subinterface/snmp_index
            optional uint32 logical = 65;    // /interfaces/interface/subinterfaces/subinterface/logical
            optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/state
            message state_type {
               optional uint32 index = 51;    // /interfaces/interface/subinterfaces/subinterface/state/index
               optional string description = 53;    // /interfaces/interface/subinterfaces/subinterface/state/description
               optional bool enabled = 54;    // /interfaces/interface/subinterfaces/subinterface/state/enabled
               optional string name = 52;    // /interfaces/interface/subinterfaces/subinterface/state/name
               optional uint32 ifindex = 55;    // /interfaces/interface/subinterfaces/subinterface/state/ifindex
               optional string admin_status = 56;    // /interfaces/interface/subinterfaces/subinterface/state/admin-status
               optional string oper_status = 57;    // /interfaces/interface/subinterfaces/subinterface/state/oper-status
               optional uint64 last_change = 58;    // /interfaces/interface/subinterfaces/subinterface/state/last-change
               optional bool logical = 65;    // /interfaces/interface/subinterfaces/subinterface/state/logical
            }
            optional tunnel_type tunnel = 154;    // /interfaces/interface/subinterfaces/subinterface/tunnel
            message tunnel_type {
               optional state_type state = 154;    // /interfaces/interface/subinterfaces/subinterface/tunnel/state
               message state_type {
                  optional string src = 51;    // /interfaces/interface/subinterfaces/subinterface/tunnel/state/src
                  optional string dst = 52;    // /interfaces/interface/subinterfaces/subinterface/tunnel/state/dst
                  optional uint32 ttl = 53;    // /interfaces/interface/subinterfaces/subinterface/tunnel/state/ttl
                  optional uint32 gre_key = 54;    // /interfaces/interface/subinterfaces/subinterface/tunnel/state/gre-key
               }
            }
            optional ipv4_type ipv4 = 152;    // /interfaces/interface/subinterfaces/subinterface/ipv4
            message ipv4_type {
               optional addresses_type addresses = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses
               message addresses_type {
                  message address_list {    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address
                     optional string ip = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/ip
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/state
                     message state_type {
                        optional string ip = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/state/ip
                        optional uint32 prefix_length = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/state/prefix-length
                        optional string origin = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/state/origin
                     }
                  }
                  repeated address_list address = 151;
               }
               optional proxy_arp_type proxy_arp = 155;    // /interfaces/interface/subinterfaces/subinterface/ipv4/proxy-arp
               message proxy_arp_type {
                  optional state_type state = 154;    // /interfaces/interface/subinterfaces/subinterface/ipv4/proxy-arp/state
                  message state_type {
                     optional string mode = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv4/proxy-arp/state/mode
                  }
               }
               optional neighbors_type neighbors = 152;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors
               message neighbors_type {
                  message neighbor_list {    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor
                     optional string ip = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/ip
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state
                     message state_type {
                        optional string ip = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/ip
                        optional string link_layer_address = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/link-layer-address
                        optional string origin = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/origin
                        optional string host_name = 54;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/host-name
                        optional uint32 table_id = 55;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/table-id
                        optional string neighbor_state = 56;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/neighbor-state
                        optional uint32 expiry = 57;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/expiry
                        optional bool is_publish = 58;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/is-publish
                        optional string interface_name = 59;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/interface-name
                        optional uint32 logical_router_id = 60;    // /interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor/state/logical-router-id
                     }
                  }
                  repeated neighbor_list neighbor = 151;
               }
               optional unnumbered_type unnumbered = 153;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered
               message unnumbered_type {
                  optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/state
                  message state_type {
                     optional bool enabled = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/state/enabled
                  }
                  optional interface_ref_type interface_ref = 152;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/interface-ref
                  message interface_ref_type {
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/interface-ref/state
                     message state_type {
                        optional string interface = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/interface-ref/state/interface
                        optional uint32 subinterface = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/interface-ref/state/subinterface
                     }
                  }
               }
               optional state_type state = 154;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state
               message state_type {
                  optional bool enabled = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/enabled
                  optional uint32 mtu = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/mtu
                  optional counters_type counters = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/counters
                  message counters_type {
                     optional uint64 in_forwarded_pkts = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/counters/in-forwarded-pkts
                     optional uint64 in_forwarded_octets = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/counters/in-forwarded-octets
                     optional uint64 out_forwarded_pkts = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/counters/out-forwarded-pkts
                     optional uint64 out_forwarded_octets = 54;    // /interfaces/interface/subinterfaces/subinterface/ipv4/state/counters/out-forwarded-octets
                  }
               }
            }
            optional ipv6_type ipv6 = 153;    // /interfaces/interface/subinterfaces/subinterface/ipv6
            message ipv6_type {
               optional addresses_type addresses = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses
               message addresses_type {
                  message address_list {    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address
                     optional string ip = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/ip
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state
                     message state_type {
                        optional string ip = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state/ip
                        optional uint32 prefix_length = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state/prefix-length
                        optional string type = 55;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state/type
                        optional string origin = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state/origin
                        optional string status = 54;    // /interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/state/status
                     }
                  }
                  repeated address_list address = 151;
               }
               optional neighbors_type neighbors = 152;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors
               message neighbors_type {
                  message neighbor_list {    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor
                     optional string ip = 51 [(telemetry_options).is_key = true];    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/ip
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state
                     message state_type {
                        optional string ip = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/ip
                        optional string link_layer_address = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/link-layer-address
                        optional string origin = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/origin
                        optional bool is_router = 54;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/is-router
                        optional string neighbor_state = 55;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/neighbor-state
                        optional uint32 table_id = 56;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/table-id
                        optional bool is_secure = 57;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/is-secure
                        optional uint32 expiry = 59;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/expiry
                        optional bool is_publish = 58;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/is-publish
                        optional string interface_name = 60;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/interface-name
                        optional uint32 logical_router_id = 61;    // /interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor/state/logical-router-id
                     }
                  }
                  repeated neighbor_list neighbor = 151;
               }
               optional unnumbered_type unnumbered = 153;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered
               message unnumbered_type {
                  optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/state
                  message state_type {
                     optional bool enabled = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/state/enabled
                  }
                  optional interface_ref_type interface_ref = 152;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/interface-ref
                  message interface_ref_type {
                     optional state_type state = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/interface-ref/state
                     message state_type {
                        optional string interface = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/interface-ref/state/interface
                        optional uint32 subinterface = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/interface-ref/state/subinterface
                     }
                  }
               }
               optional state_type state = 154;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state
               message state_type {
                  optional bool enabled = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/enabled
                  optional uint32 mtu = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/mtu
                  optional uint32 dup_addr_detect_transmits = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/dup-addr-detect-transmits
                  optional counters_type counters = 151;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/counters
                  message counters_type {
                     optional uint64 in_forwarded_pkts = 51;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/counters/in-forwarded-pkts
                     optional uint64 in_forwarded_octets = 52;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/counters/in-forwarded-octets
                     optional uint64 out_forwarded_pkts = 53;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/counters/out-forwarded-pkts
                     optional uint64 out_forwarded_octets = 54;    // /interfaces/interface/subinterfaces/subinterface/ipv6/state/counters/out-forwarded-octets
                  }
               }
            }
         }
         repeated subinterface_list subinterface = 151;
      }
      optional hold_time_type hold_time = 155;    // /interfaces/interface/hold-time
      message hold_time_type {
         optional state_type state = 151;    // /interfaces/interface/hold-time/state
         message state_type {
            optional uint32 up = 51;    // /interfaces/interface/hold-time/state/up
            optional uint32 down = 52;    // /interfaces/interface/hold-time/state/down
         }
      }
      optional ethernet_type ethernet = 153;    // /interfaces/interface/ethernet
      message ethernet_type {
         optional state_type state = 151;    // /interfaces/interface/ethernet/state
         message state_type {
            optional string mac_address = 51;    // /interfaces/interface/ethernet/state/mac-address
            optional bool auto_negotiate = 52;    // /interfaces/interface/ethernet/state/auto-negotiate
            optional string duplex_mode = 53;    // /interfaces/interface/ethernet/state/duplex-mode
            optional string port_speed = 54;    // /interfaces/interface/ethernet/state/port-speed
            optional bool enable_flow_control = 55;    // /interfaces/interface/ethernet/state/enable-flow-control
            optional string hw_mac_address = 56;    // /interfaces/interface/ethernet/state/hw-mac-address
            optional string negotiated_duplex_mode = 57;    // /interfaces/interface/ethernet/state/negotiated-duplex-mode
            optional string negotiated_port_speed = 58;    // /interfaces/interface/ethernet/state/negotiated-port-speed
            optional counters_type counters = 151;    // /interfaces/interface/ethernet/state/counters
            message counters_type {
               optional uint64 in_mac_control_frames = 51;    // /interfaces/interface/ethernet/state/counters/in-mac-control-frames
               optional uint64 in_mac_pause_frames = 52;    // /interfaces/interface/ethernet/state/counters/in-mac-pause-frames
               optional uint64 in_oversize_frames = 53;    // /interfaces/interface/ethernet/state/counters/in-oversize-frames
               optional uint64 in_jabber_frames = 54;    // /interfaces/interface/ethernet/state/counters/in-jabber-frames
               optional uint64 in_fragment_frames = 55;    // /interfaces/interface/ethernet/state/counters/in-fragment-frames
               optional uint64 in_8021q_frames = 56;    // /interfaces/interface/ethernet/state/counters/in-8021q-frames
               optional uint64 in_crc_errors = 57;    // /interfaces/interface/ethernet/state/counters/in-crc-errors
               optional uint64 in_block_errors = 58;    // /interfaces/interface/ethernet/state/counters/in-block-errors
               optional uint64 out_mac_control_frames = 60;    // /interfaces/interface/ethernet/state/counters/out-mac-control-frames
               optional uint64 out_mac_pause_frames = 59;    // /interfaces/interface/ethernet/state/counters/out-mac-pause-frames
               optional in_distribution_type in_distribution = 151;    // /interfaces/interface/ethernet/state/counters/in-distribution
               message in_distribution_type {
                  optional uint64 in_frames_64_octets = 51;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-64-octets
                  optional uint64 in_frames_65_127_octets = 52;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-65-127-octets
                  optional uint64 in_frames_128_255_octets = 53;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-128-255-octets
                  optional uint64 in_frames_256_511_octets = 54;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-256-511-octets
                  optional uint64 in_frames_512_1023_octets = 55;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-512-1023-octets
                  optional uint64 in_frames_1024_1518_octets = 56;    // /interfaces/interface/ethernet/state/counters/in-distribution/in-frames-1024-1518-octets
               }
            }
         }
      }
   }
   repeated interface_list interface = 151;
}
