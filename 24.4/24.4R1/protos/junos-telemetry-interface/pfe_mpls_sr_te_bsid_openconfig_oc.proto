/* 
This proto is generated from below openconfig models
openconfig-yang-types - This module contains a set of extension types to the
YANG builtin types that are used across multiple
OpenConfig models
openconfig-segment-routing-types - Types associated with a network instance
openconfig-srte-policy - This module defines a collection of segment routing traffic
engineering policy operational states
*/
syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional network_instances_pfe_mpls_sr_te_bsid jnpr_network_instances_pfe_mpls_sr_te_bsid_ext = 174;
}

message network_instances_pfe_mpls_sr_te_bsid {    // /network-instances
   message network_instance_list {    // /network-instances/network-instance
      optional string name = 82 [(telemetry_options).is_key = true];    // /network-instances/network-instance/name
      optional segment_routing_type segment_routing = 111;    // /network-instances/network-instance/segment-routing
      message segment_routing_type {
         optional te_policies_type te_policies = 111;    // /network-instances/network-instance/segment-routing/te-policies
         message te_policies_type {
            message te_policy_list {    // /network-instances/network-instance/segment-routing/te-policies/te-policy
               optional uint32 color = 147 [(telemetry_options).is_key = true];    // /network-instances/network-instance/segment-routing/te-policies/te-policy/color
               optional string endpoint = 146 [(telemetry_options).is_key = true];    // /network-instances/network-instance/segment-routing/te-policies/te-policy/endpoint
               optional state_type state = 111;    // /network-instances/network-instance/segment-routing/te-policies/te-policy/state
               message state_type {
                  optional counters_type counters = 111;    // /network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters
                  message counters_type {
                     optional uint64 in_labeled_pkts = 143;    // /network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts
                     optional uint64 in_labeled_octets = 144;    // /network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets
                  }
               }
            }
            repeated te_policy_list te_policy = 111;
         }
      }
   }
   repeated network_instance_list network_instance = 175;
}
