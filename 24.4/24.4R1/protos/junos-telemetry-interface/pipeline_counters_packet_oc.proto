/* 
This proto is generated from below openconfig models
openconfig-yang-types - This module contains a set of extension types to the
YANG builtin types that are used across multiple
OpenConfig models
openconfig-inet-types - This module contains a set of Internet address related
types for use in OpenConfig modules
*/
syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional components_pipeline_counters_packet_280 jnpr_components_pipeline_counters_packet_280_ext = 280;
}

message components_pipeline_counters_packet_280 {    // /components
   message component_list {    // /components/component
      optional string name = 201 [(telemetry_options).is_key = true];    // /components/component/name
      optional integrated_circuit_type integrated_circuit = 200;    // /components/component/integrated-circuit
      message integrated_circuit_type {
         optional pipeline_counters_type pipeline_counters = 200;    // /components/component/integrated-circuit/pipeline-counters
         message pipeline_counters_type {
            optional packet_type packet = 200;    // /components/component/integrated-circuit/pipeline-counters/packet
            message packet_type {
               optional lookup_block_type lookup_block = 200;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block
               message lookup_block_type {
                  optional state_type state = 200;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state
                  message state_type {
                     optional uint32 lookup_utilization = 202;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/lookup-utilization
                     optional uint64 in_packets = 203;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/in-packets
                     optional uint64 out_packets = 204;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/out-packets
                     optional uint64 lookup_memory = 205;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/lookup-memory
                     optional uint64 lookup_memory_used = 206;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/lookup-memory-used
                     optional uint64 nexthop_memory = 207;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/nexthop-memory
                     optional uint64 nexthop_memory_used = 208;    // /components/component/integrated-circuit/pipeline-counters/packet/lookup-block/state/nexthop-memory-used
                  }
               }
               optional host_interface_block_type host_interface_block = 201;    // /components/component/integrated-circuit/pipeline-counters/packet/host-interface-block
               message host_interface_block_type {
                  optional state_type state = 200;    // /components/component/integrated-circuit/pipeline-counters/packet/host-interface-block/state
                  message state_type {
                     optional uint64 in_packets = 202;    // /components/component/integrated-circuit/pipeline-counters/packet/host-interface-block/state/in-packets
                     optional uint64 out_packets = 203;    // /components/component/integrated-circuit/pipeline-counters/packet/host-interface-block/state/out-packets
                  }
               }
            }
         }
      }
   }
   repeated component_list component = 200;
}
