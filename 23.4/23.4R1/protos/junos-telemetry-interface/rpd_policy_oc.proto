syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional routing_policy_policy_283 jnpr_routing_policy_policy_283_ext = 283;
}

message routing_policy_policy_283 {
   optional policy_definitions_type policy_definitions = 151;
   message policy_definitions_type {
      message policy_definition_list {
         optional string name = 51 [(telemetry_options).is_key = true];
         optional state_type state = 151;
         message state_type {
            optional string name = 51;
         }
         optional statements_type statements = 152;
         message statements_type {
            message statement_list {
               optional string name = 52 [(telemetry_options).is_key = true];
               optional state_type state = 152;
               message state_type {
                  optional string name = 52;
               }
               optional conditions_type conditions = 153;
               message conditions_type {
                  optional state_type state = 153;
                  message state_type {
                     optional string call_policy = 52;
                     optional string install_protocol_eq = 51;
                  }
                  optional match_interface_type match_interface = 152;
                  message match_interface_type {
                     optional state_type state = 151;
                     message state_type {
                        optional string interface = 51;
                        optional uint32 subinterface = 52;
                     }
                  }
                  optional match_prefix_set_type match_prefix_set = 151;
                  message match_prefix_set_type {
                     optional state_type state = 151;
                     message state_type {
                        optional string prefix_set = 51;
                        optional string match_set_options = 52;
                     }
                  }
               }
               optional actions_type actions = 154;
               message actions_type {
                  optional state_type state = 151;
                  message state_type {
                     optional string policy_result = 51;
                  }
                  optional set_tag_type set_tag = 152;
                  message set_tag_type {
                     optional state_type state = 152;
                     message state_type {
                        optional string mode = 51;
                     }
                     optional inline_type inline = 151;
                     message inline_type {
                        optional state_type state = 151;
                        message state_type {
                           repeated string tag = 51;
                        }
                     }
                  }
               }
            }
            repeated statement_list statement = 151;
         }
      }
      repeated policy_definition_list policy_definition = 51;
   }
   optional defined_sets_type defined_sets = 152;
   message defined_sets_type {
      optional prefix_sets_type prefix_sets = 151;
      message prefix_sets_type {
         message prefix_set_list {
            optional string name = 51 [(telemetry_options).is_key = true];
            optional state_type state = 151;
            message state_type {
               optional string name = 51;
               optional string mode = 52;
            }
            optional prefixes_type prefixes = 152;
            message prefixes_type {
               message prefix_list {
                  optional string ip_prefix = 51;
                  optional string masklength_range = 52;
                  optional state_type state = 152;
                  message state_type {
                     optional string ip_prefix = 51;
                     optional string masklength_range = 52;
                  }
               }
               repeated prefix_list prefix = 151;
            }
         }
         repeated prefix_set_list prefix_set = 51;
      }
   }
}
