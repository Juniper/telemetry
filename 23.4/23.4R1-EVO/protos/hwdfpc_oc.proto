syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional components_fpc jnpr_components_fpc_ext = 140;
}

message components_fpc {
   message component_list {
      optional string name = 51 [(telemetry_options).is_key = true];
      optional state_type state = 151;
      message state_type {
         optional string name = 51;
         optional string type = 52;
         optional string id = 53;
         optional string location = 59;
         optional string description = 54;
         optional string mfg_name = 60;
         optional string mfg_date = 61;
         optional string hardware_version = 57;
         optional string firmware_version = 62;
         optional string software_version = 63;
         optional string serial_no = 55;
         optional string part_no = 56;
         optional bool removable = 64;
         optional string oper_status = 58;
         optional bool empty = 65;
         optional string parent = 66;
         optional temperature_type temperature = 151;
         message temperature_type {
            optional double instant = 51;
            optional double avg = 56;
            optional double min = 52;
            optional double max = 53;
            optional uint64 interval = 57;
            optional uint64 min_time = 54;
            optional uint64 max_time = 55;
            optional bool alarm_status = 58;
            optional uint32 alarm_threshold = 59;
            optional string alarm_severity = 60;
         }
         optional memory_type memory = 152;
         message memory_type {
            optional uint64 available = 51;
            optional uint64 utilized = 52;
         }
         optional uint32 allocated_power = 67;
         optional uint32 used_power = 68;
         optional uint32 entity_id = 73;
         optional bool equipment_failure = 74;
         optional bool equipment_mismatch = 75;
      }
      optional properties_type properties = 152;
      message properties_type {
         message property_list {
            optional string name = 51 [(telemetry_options).is_key = true];
            optional state_type state = 151;
            message state_type {
               optional string value = 51;
               optional bool configurable = 52;
            }
         }
         repeated property_list property = 151;
      }
      optional subcomponents_type subcomponents = 153;
      message subcomponents_type {
         message subcomponent_list {
            optional string name = 51 [(telemetry_options).is_key = true];
            optional state_type state = 151;
            message state_type {
               optional string name = 51;
            }
         }
         repeated subcomponent_list subcomponent = 151;
      }
      optional cpu_type cpu = 154;
      message cpu_type {
         optional utilization_type utilization = 151;
         message utilization_type {
            optional state_type state = 151;
            message state_type {
               optional uint32 instant = 51;
               optional uint32 avg = 52;
               optional uint32 min = 54;
               optional uint32 max = 55;
               optional uint64 interval = 53;
               optional uint64 min_time = 56;
               optional uint64 max_time = 57;
            }
         }
      }
   }
   repeated component_list component = 151;
}
