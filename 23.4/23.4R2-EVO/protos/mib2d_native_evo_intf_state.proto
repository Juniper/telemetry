syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional state_mib2d_native_288 jnpr_state_mib2d_native_288_ext = 288;
}

message state_mib2d_native_288 {
   optional interfaces_type interfaces = 152;
   message interfaces_type {
      message interface_list {
         optional string name = 51 [(telemetry_options).is_key = true];
         optional units_type units = 151;
         message units_type {
            message unit_list {
               optional uint32 name = 51 [(telemetry_options).is_key = true];
               optional family_type family = 151;
               message family_type {
                  optional inet_type inet = 152;
                  message inet_type {
                     optional uint32 mtu = 51;
                     optional addresses_type addresses = 153;
                     message addresses_type {
                        message address_list {
                           optional string ip = 52 [(telemetry_options).is_key = true];
                           optional uint32 prefix_length = 53;
                           optional string origin = 54;
                           optional bool primary = 55;
                           optional bool preferred = 56;
                        }
                        repeated address_list address = 154;
                     }
                  }
                  optional inet6_type inet6 = 160;
                  message inet6_type {
                     optional uint32 mtu = 61;
                     optional addresses_type addresses = 161;
                     message addresses_type {
                        message address_list {
                           optional string ip = 62 [(telemetry_options).is_key = true];
                           optional uint32 prefix_length = 63;
                           optional string origin = 64;
                           optional bool primary = 65;
                           optional bool preferred = 66;
                           optional bool link_local = 67;
                        }
                        repeated address_list address = 162;
                     }
                  }
               }
               optional tunnel_type tunnel = 167;
               message tunnel_type {
                  optional string source_address = 62;
                  optional string destination_address = 63;
                  optional uint32 ttl = 64;
                  optional uint32 gre_key = 65;
                  optional bool bypass_loopback = 66;
                  optional bool allow_fragmentation = 67;
                  optional string encapsulation = 68;
               }
            }
            repeated unit_list unit = 152;
         }
      }
      repeated interface_list interface = 153;
   }
}
