syntax = "proto2";

import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional junos_telemetry jnpr_junos_telemetry_ext = 124;
}

message junos_telemetry {
   optional system_type system = 231;
   message system_type {
      optional state_type state = 991;
      message state_type {
         message infra_list {
            optional uint64 system_infra_key = 879 [(telemetry_options).is_key = true];
            optional uint32 object_db_usage_perc = 51;
            message dependency_info_list {
               optional string app_name = 81 [(telemetry_options).is_key = true];
               optional string status = 82;
               optional string app_node = 83;
            }
            repeated dependency_info_list dependency_info = 121;
            message node_info_list {
               optional string node_type = 73 [(telemetry_options).is_key = true];
               optional string node_status = 74;
            }
            repeated node_info_list node_info = 181;
            message app_status_list {
               optional string app_name = 71 [(telemetry_options).is_key = true];
               optional string app_status = 72;
            }
            repeated app_status_list app_status = 191;
         }
         repeated infra_list infra = 651;
         message network_list {
            optional uint64 system_network_key = 880 [(telemetry_options).is_key = true];
            optional string jtd_loaded = 41;
            optional string master_dev_vrf = 42;
            optional uint64 jtd_packets_drop_input = 43;
            optional uint64 jtd_packets_drop_output = 44;
            optional string fibd_proxy_si_comm = 45;
            optional string fibd_proxy_jtd_comm = 46;
            optional string fibd_proxy_si_comm_listen = 47;
            optional string fibd_proxy_si_comm_established = 48;
            optional string fibd_proxy_jtd_comm_listen = 49;
            optional string fibd_proxy_jtd_comm_established = 50;
         }
         repeated network_list network = 352;
         message baseos_list {
            optional uint64 baseos_key = 881 [(telemetry_options).is_key = true];
            optional uint64 open_files_cnt = 61;
            optional uint64 max_files_cnt = 62;
            optional uint64 max_process_cnt = 63;
            optional uint64 process_cnt = 64;
            optional uint32 alarms_cnt = 65;
         }
         repeated baseos_list baseos = 353;
      }
   }
}
